name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-and-test-on-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2

    - name: Init
      shell: bash
      run: sudo bash build.sh init

    - name: BuildRelease
      shell: bash
      run: bash build.sh release --make -j4

    - name: BuildDebug
      shell: bash
      run: bash build.sh debug --make -j4

    - name: Test
      shell: bash
      run: |
        cd build_debug
        make test

  build-on-mac:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v2
        
    - name: Build
      shell: bash
      run: sudo bash build.sh init && bash build.sh release --make -j4
      
  basic-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2

      - name: run basic test
        shell: bash
        run: |
          sudo bash build.sh init
          echo "begin test..."
          python3 test/case/miniob_test.py --test-cases=basic | tail -1 | grep "basic is success"

  sysbench-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2

      - name: install sysbench
        shell: bash
	run: |
	curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh | sudo bash
	sudo apt -y install sysbench
	
      - name: start server
        shell: bash
	run: |
	  sudo bash build.sh init
	  bash build.sh -DCONCURRENCY
	  ./build_debug/bin/observer -s miniob.sock -f etc/observer.ini -P mysql -t mvcc &

      - name: sysbench test
        shell: bash
	run: |
	  cd test/sysbench
	  sysbench --mysql-socket=../../build_debug/miniob.sock --threads=10 miniob_insert prepare
	  sysbench --mysql-socket=../../build_debug/miniob.sock --threads=10 miniob_insert run
	  